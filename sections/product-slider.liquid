{%- assign per_row = section.settings.per_row -%}
{%- assign product_limit = per_row | times: section.settings.rows -%}
{%- assign collection = collections[section.settings.home_featured_products] -%}

{%- if section.settings.divider -%}<div class="section--divider">{%- endif -%}

<div
  id="CollectionSection-{{ section.id }}"
  data-section-id="{{ section.id }}"
  data-section-type="collection-grid"
  data-context="featured-collection" class="custom-slider-wrapper">
  {%- if section.settings.title != blank or section.settings.view_all -%}
    <div class="page-width">
      <div class="section-header{% if section.settings.view_all %}{% unless settings.type_headers_align_text %} section-header--with-link{% endunless %}{% endif %}">
        <h2 class="section-header__title">
          {{ section.settings.title }}
        </h2>
        {%- if section.settings.view_all and section.settings.rows == 1 -%}
          <a href="{{ collections[section.settings.home_featured_products].url }}" class="btn btn--secondary btn--small section-header__link">{{ 'collections.general.all_of_collection' | t }}</a>
        {%- endif -%}

        <!-- custom controls -->
        <div class="flickity-controls" aria-hidden="false">
          <button class="flickity-button flickity-prev-custom custom-prev flickity-prev-{{ section.id }}"
                  type="button"
                  role="button"
                  aria-label="Previous slide"
                  aria-disabled="false"
                  tabindex="0">
            <!-- left arrow -->
            <svg width="40" height="40" viewBox="0 0 40 40" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M31.6666 20.0001H8.33325" stroke="#1B0D0D" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            <path d="M23.3333 28.3333L31.6666 20" stroke="#1B0D0D" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            <path d="M23.3333 11.6667L31.6666 20.0001" stroke="#1B0D0D" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            </svg>

          </button>

          <button class="flickity-button flickity-next-custom custom-next flickity-next-{{ section.id }}"
                  type="button"
                  role="button"
                  aria-label="Next slide"
                  aria-disabled="false"
                  tabindex="0">
            <!-- right arrow -->
            <svg width="40" height="40" viewBox="0 0 40 40" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M31.6666 20.0001H8.33325" stroke="#1B0D0D" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            <path d="M23.3333 28.3333L31.6666 20" stroke="#1B0D0D" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            <path d="M23.3333 11.6667L31.6666 20.0001" stroke="#1B0D0D" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            </svg>

          </button>
        </div>
      </div>
    </div>
  {%- endif -%}

  <div class="page-width{% if section.settings.mobile_scrollable %} page-width--flush-small{% endif %}">
    <div{% if section.settings.mobile_scrollable %} class="grid-overflow-wrapper"{% endif %}>
      <div id="productSlider-{{ section.id }}" class="grid grid--uniform product-slider js-product-slide"{% if section.settings.mobile_scrollable %} data-aos="overflow__animation"{% endif %}
      >
        {%- liquid
          capture gridView
            render 'products_per_row', products_per_row: per_row, style: 'fractions'
          endcapture

          if section.settings.mobile_scrollable
            assign fallback = '39vw'
          else
            assign fallback = 'variable'
          endif
        -%}

        {%- if section.settings.home_featured_products == blank or collections[section.settings.home_featured_products].empty? or collections[section.settings.home_featured_products].products_count == 0 -%}

          {%- unless emptyState -%}
            {%- assign emptyState = true -%}
          {%- endunless -%}

          <div class="grid__item">
            <div class="grid grid--uniform">
              {%- for i in (1..product_limit) -%}
                <div class="grid__item grid-product {{ gridView }}" data-aos="row-of-{{ per_row }}">
                  <div class="grid-product__content">
                    <a href="{{ product.url | within: collection }}" class="grid-product__link">
                      <div class="grid-product__image-mask">
                        {%- capture current -%}{% cycle 1, 2, 3, 4, 5, 6 %}{%- endcapture -%}
                        <div class="image-wrap">{{ 'product-' | append: current | placeholder_svg_tag: 'placeholder-svg' }}</div>
                      </div>
                      <div class="grid-product__meta">
                        <div class="grid-product__title">{{ 'home_page.onboarding.product_title' | t }}</div>
                        <div class="grid-product__price">$29</div>
                      </div>
                    </a>
                  </div>
                </div>
              {%- endfor -%}
            </div>
          </div>

        {%- else -%}

          {%- for product in collections[section.settings.home_featured_products].products limit: product_limit -%}
            {%- render 'product-grid-item',
              product: product,
              collection: collection,
              per_row: per_row,
              quick_shop_enable: settings.quick_shop_enable,
              fallback: fallback,
            -%}
          {%- endfor -%}

          {%- if section.settings.view_all -%}

            {%- if section.settings.rows > 1 -%}
              <div class="grid__item text-center{% if section.settings.mobile_scrollable %} small--hide{% endif %}">
                <a href="{{ collections[section.settings.home_featured_products].url }}" class="btn">{{ 'collections.general.all_of_collection' | t }}</a>
              </div>
            {%- endif -%}

            {%- if section.settings.mobile_scrollable -%}
              <div class="grid__item grid__item--view-all text-center {{ gridView }} medium-up--hide">
                <a href="{{ collections[section.settings.home_featured_products].url }}" class="grid-product__see-all">
                  {{ 'collections.general.view_all_products_html' | t: count: collection.products_count }}
                </a>
              </div>
            {%- endif -%}

          {%- endif -%}

        {%- endif -%}
      </div>
    </div>
  </div>
</div>

{%- if section.settings.divider -%}</div>{%- endif -%}

<script src="https://unpkg.com/flickity@2/dist/flickity.pkgd.min.js"></script>

<script>
 document.querySelectorAll('.product-slider').forEach(slider => {
  // check if already initialized by Impulse
  let flkty = Flickity.data(slider);

  // If not, initialize it
  if (!flkty) {
    new Flickity(slider, {
      cellAlign: 'left',
      contain: true,
      wrapAround: false,
      groupCells: true,
      pageDots: false,
      prevNextButtons: false // use custom buttons if needed
    });
  }
});

document.querySelectorAll('.custom-slider-wrapper').forEach(wrapper => {
  const slider = wrapper.querySelector('.product-slider');
  const prevBtn = wrapper.querySelector('.custom-prev');
  const nextBtn = wrapper.querySelector('.custom-next');

  const flkty = Flickity.data(slider);

  if (flkty) {
    // update button states on load + when slide changes
    function updateButtons() {
      // disable prev if first slide
      if (flkty.selectedIndex === 0) {
        prevBtn.disabled = true;
      } else {
        prevBtn.disabled = false;
      }

      // disable next if last slide
      if (flkty.selectedIndex === flkty.slides.length - 1) {
        nextBtn.disabled = true;
      } else {
        nextBtn.disabled = false;
      }
    }

    // run on init
    updateButtons();

    // run whenever the slide changes
    flkty.on('change', updateButtons);

    // button clicks
    prevBtn.addEventListener('click', () => flkty.previous());
    nextBtn.addEventListener('click', () => flkty.next());
  }
});





</script>
{% comment %}
<script>
  
    // initialize Flickity (if you prefer JS-init instead of data-attribute):
    var carouselElem = document.querySelector('#productSlider-{{ section.id }}');
    var flkty = new Flickity(carouselElem, {
      cellAlign: 'left',
      contain: true,
      groupCells: true,
      pageDots: false,
      prevNextButtons: false, // important: disable Flickity's built-in buttons
      wrapAround: false       // set to true if you want arrows to never disable
    });

    // custom buttons
    var prevBtn = document.querySelector('.flickity-prev-{{ section.id }}');
    var nextBtn = document.querySelector('.flickity-next-{{ section.id }}');

    prevBtn.addEventListener('click', function () { flkty.previous(); });
    nextBtn.addEventListener('click', function () { flkty.next(); });

    // keyboard activation (Enter / Space)
    [prevBtn, nextBtn].forEach(function(btn){
      btn.addEventListener('keydown', function(e){
        if (e.key === 'Enter' || e.key === ' ' || e.key === 'Spacebar') {
          e.preventDefault();
          btn.click();
        }
      });
    });

    // update disabled state for non-wrapAround carousels
    function updateDisabledState() {
      if (flkty.options.wrapAround) {
        prevBtn.setAttribute('aria-disabled', 'false');
        nextBtn.setAttribute('aria-disabled', 'false');
        return;
      }
      var selected = flkty.selectedIndex;
      var lastIndex = flkty.slides.length - 1;
      prevBtn.setAttribute('aria-disabled', selected === 0 ? 'true' : 'false');
      nextBtn.setAttribute('aria-disabled', selected === lastIndex ? 'true' : 'false');
    }

    // initial state + after selection changes
    updateDisabledState();
    flkty.on('select', updateDisabledState);

    // Optional: support for external controls (e.g., enable/disable from code)
    // Example: flkty.next(), flkty.previous(), flkty.select(2), etc.
  </script>
 {% endcomment %} 

<style>
  #CollectionSection-{{ section.id }} .section-header{
    display: flex;
    justify-content: space-between;
    align-items: center;
    border-bottom: solid 1px #1B0D0DCC;
    padding-bottom: 40px;
    text-align: left;
  }
  #CollectionSection-{{ section.id }} .section-header{
  }
  #CollectionSection-{{ section.id }} .flickity-controls {
    display: flex;
    gap: 10px;
  }
  #CollectionSection-{{ section.id }} .flickity-controls button {
    width: 40px;
    height: 40px;
    position: relative;
    background: transparent;
    border-radius: 0;
    padding: 0;
  }
  #CollectionSection-{{ section.id }} .flickity-button.flickity-prev-custom {
    transform: rotate(180deg);
  }
  #CollectionSection-{{ section.id }} .flickity-button svg {
    max-width: 100%;
  }
  #CollectionSection-{{ section.id }} .flickity-button[aria-disabled="true"],
  #CollectionSection-{{ section.id }} .flickity-button:disabled {
    display: block;
    opacity: 0.5;
  }
</style>

{%- style -%}
  {% if section.settings.remove_margin %}
    #shopify-section-{{ section.id }}.index-section{
      margin:0;
    }
  {% endif %}  
  #CollectionSection-{{ section.id }} {
    padding-top: {{ section.settings.padding_top_mb }}px;
    padding-bottom: {{ section.settings.padding_bottom_mb }}px;
    background-color:{{ section.settings.bgcolor }};
  }

  @media screen and (min-width: 750px) {
    #CollectionSection-{{ section.id }}{
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }
{%- endstyle -%}

{% schema %}
{
  "name": "Product Slider",
  "class": "index-section",
  "settings": [
    {
      "type": "inline_richtext",
      "id": "title",
      "label": "t:sections.featured-collection.settings.title.label",
      "default": "Featured collection"
    },
    {
      "type": "collection",
      "id": "home_featured_products",
      "label": "t:sections.featured-collection.settings.home_featured_products.label"
    },
    {
      "type": "range",
      "id": "per_row",
      "label": "t:sections.featured-collection.settings.per_row.label",
      "default": 4,
      "min": 1,
      "max": 5,
      "step": 1
    },
    {
      "type": "range",
      "id": "rows",
      "label": "t:sections.featured-collection.settings.rows.label",
      "default": 2,
      "min": 1,
      "max": 5,
      "step": 1
    },
    {
      "type": "checkbox",
      "id": "view_all",
      "label": "t:sections.featured-collection.settings.view_all.label",
      "default": false
    },
    {
      "type": "checkbox",
      "id": "divider",
      "label": "t:sections.featured-collection.settings.divider.label",
      "default": false
    },
    {
      "type": "color",
      "id": "bgcolor",
      "label": "Background color",
      "default": "#F5F1E9"
    },
    {
      "type": "checkbox",
      "id": "remove_margin",
      "label": "Remove section margin",
      "default": true
    },
    {
      "type": "header",
      "content": "Section padding"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Top padding",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Bottom padding",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_top_mb",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Padding top mobile",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom_mb",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Padding bottom mobile",
      "default": 36
    }
  ],
  "presets": [
    {
      "name": "Product Slider"
    }
  ],
  "blocks": [],
  "disabled_on": {
    "groups": ["footer", "header", "custom.popups"]
  }
}
{% endschema %}